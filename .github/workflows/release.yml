name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Run go fmt check
      run: |
        if [ "$(go fmt ./... | wc -l)" -gt 0 ]; then
          echo "Code is not formatted. Please run 'go fmt ./...'"
          exit 1
        fi

  release:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true
    
    - name: Get version from tag
      id: version
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Build binaries
      run: |
        mkdir -p dist
        
        # Build for multiple platforms
        platforms=("windows/amd64" "linux/amd64" "darwin/amd64" "darwin/arm64")
        
        for platform in "${platforms[@]}"
        do
          platform_split=(${platform//\// })
          GOOS=${platform_split[0]}
          GOARCH=${platform_split[1]}
          
          output_name="code2txt-${GOOS}-${GOARCH}"
          if [ $GOOS = "windows" ]; then
            output_name+='.exe'
          fi
          
          echo "Building for $GOOS/$GOARCH..."
          env GOOS=$GOOS GOARCH=$GOARCH go build \
            -ldflags="-s -w -X main.version=${{ steps.version.outputs.VERSION }}" \
            -o dist/$output_name
        done
        
        # List built files
        ls -la dist/
    
    - name: Generate checksums
      run: |
        cd dist
        sha256sum * > checksums.txt
        cat checksums.txt
    
    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.TAG_NAME }}
        name: Release ${{ steps.version.outputs.TAG_NAME }}
        files: |
          dist/*
        body: |
          ## üöÄ code2txt ${{ steps.version.outputs.TAG_NAME }} - AI Ready Code Converter
          
          A fast CLI tool that converts code repositories into AI-friendly text format.
          Perfect for feeding codebases to ChatGPT, Claude, or other AI models.
          
          ### ‚ú® Features
          - **Fast scanning**: Process 1000+ files quickly
          - **Token counting**: Accurate GPT-4/Claude token estimation  
          - **Tree visualization**: Beautiful directory structure display
          - **Smart filtering**: Respects .gitignore automatically
          - **Cross-platform**: Works on Windows, Mac, and Linux
          - **Flexible patterns**: Include/exclude file patterns
          
          ### üì• Installation
          1. Download the binary for your platform below
          2. Make executable (Linux/macOS): `chmod +x code2txt-*`
          3. Move to PATH or run directly
          
          ### üñ•Ô∏è Platform Downloads
          - **Windows 64-bit**: `code2txt-windows-amd64.exe`
          - **Linux 64-bit**: `code2txt-linux-amd64`
          - **macOS Intel**: `code2txt-darwin-amd64`
          - **macOS Apple Silicon**: `code2txt-darwin-arm64`
          
          ### üîß Quick Start
          ```bash
          # Scan project and show token counts
          code2txt ./my-project --tokens
          
          # Export to file with specific patterns
          code2txt ./src -i "*.go,*.js" -o analysis.txt
          ```
          
          ### üîç Verify Downloads
          Use the checksums.txt file to verify your download:
          ```bash
          sha256sum -c checksums.txt
          ```
          
          ### üìã Changes
          See [CHANGELOG.md](https://github.com/nav9v/code2txt/blob/main/CHANGELOG.md) for detailed changes.
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}