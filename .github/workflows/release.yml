name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run go vet
      run: go vet ./...

  build:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build binaries
      run: |
        # Windows AMD64
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/code2txt-windows-amd64.exe
        
        # Linux AMD64
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/code2txt-linux-amd64
        
        # macOS Intel
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/code2txt-macos-intel
        
        # macOS Apple Silicon
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/code2txt-macos-arm64
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Changes
          - See commit history for detailed changes
          
          ## Downloads
          Choose the appropriate binary for your platform:
          - **Windows**: code2txt-windows-amd64.exe
          - **Linux**: code2txt-linux-amd64
          - **macOS Intel**: code2txt-macos-intel  
          - **macOS Apple Silicon**: code2txt-macos-arm64
          
          ## Installation
          1. Download the binary for your platform
          2. Make it executable (Linux/macOS): `chmod +x code2txt-*`
          3. Move to PATH or run directly
        draft: false
        prerelease: false
    
    - name: Upload Windows Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/code2txt-windows-amd64.exe
        asset_name: code2txt-windows-amd64.exe
        asset_content_type: application/octet-stream
    
    - name: Upload Linux Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/code2txt-linux-amd64
        asset_name: code2txt-linux-amd64
        asset_content_type: application/octet-stream
    
    - name: Upload macOS Intel Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/code2txt-macos-intel
        asset_name: code2txt-macos-intel
        asset_content_type: application/octet-stream
    
    - name: Upload macOS ARM Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/code2txt-macos-arm64
        asset_name: code2txt-macos-arm64
        asset_content_type: application/octet-stream